layout {
  5k 5k;
  5k 5k;
  5k 5k;
  2s [2] [0] [1] [8] [9] [7] 2s;
}

options rusty_dilemma {
  hold_tap_timeout: "400";
  hold_tap_interval: "200";
  custom_event: "super::CustomEvent";
}

options keymap_drawer {
  qmk_keyboard: "corne_rotated";
  qmk_layout: "LAYOUT_split_3x5_3";
}

key scroll {
  out keyberon: "::keyberon::action::Action::Custom(super::CustomEvent::MouseScroll)";
  out keymap_drawer: "Scroll";
}

key ml {
  out keyberon: "::keyberon::action::Action::Custom(super::CustomEvent::MouseLeft)";
  out keymap_drawer: "Mouse Left";
}

key mr {
  out keyberon: "::keyberon::action::Action::Custom(super::CustomEvent::MouseRight)";
  out keymap_drawer: "Mouse Right";
}

key ctrldown {
  out keyberon: "::keyberon::action::Action::MultipleKeyCodes(&[::keyberon::key_code::KeyCode::LCtrl, ::keyberon::key_code::KeyCode::Down].as_slice())";
  out keymap_drawer: "Ctrl+Down";
}

key ctrlup {
  out keyberon: "::keyberon::action::Action::MultipleKeyCodes(&[::keyberon::key_code::KeyCode::LCtrl, ::keyberon::key_code::KeyCode::Up].as_slice())";
  out keymap_drawer: "Ctrl+Up";
}

key metax {
  out keyberon: "::keyberon::action::Action::MultipleKeyCodes(&[::keyberon::key_code::KeyCode::LAlt, ::keyberon::key_code::KeyCode::X].as_slice())";
  out keymap_drawer: "M-x";
}

key toad_linux {
  out keyberon: "::keyberon::action::Action::Custom(super::CustomEvent::TypeUnicode(\"𓆏\"))";
  out keymap_drawer: "𓆏 ";
}

key ws1 {
  out keyberon: "::keyberon::action::Action::MultipleKeyCodes(&[::keyberon::key_code::KeyCode::LCtrl, ::keyberon::key_code::KeyCode::Kb1].as_slice())";
  out keymap_drawer: "ws1";
}

key ws2 {
  out keyberon: "::keyberon::action::Action::MultipleKeyCodes(&[::keyberon::key_code::KeyCode::LCtrl, ::keyberon::key_code::KeyCode::Kb2].as_slice())";
  out keymap_drawer: "ws2";
}

key ws3 {
  out keyberon: "::keyberon::action::Action::MultipleKeyCodes(&[::keyberon::key_code::KeyCode::LCtrl, ::keyberon::key_code::KeyCode::Kb3].as_slice())";
  out keymap_drawer: "ws3";
}

key ws4 {
  out keyberon: "::keyberon::action::Action::MultipleKeyCodes(&[::keyberon::key_code::KeyCode::LCtrl, ::keyberon::key_code::KeyCode::Kb4].as_slice())";
  out keymap_drawer: "ws4";
}

key ws5 {
  out keyberon: "::keyberon::action::Action::MultipleKeyCodes(&[::keyberon::key_code::KeyCode::LCtrl, ::keyberon::key_code::KeyCode::Kb5].as_slice())";
  out keymap_drawer: "ws5";
}

key ws6 {
  out keyberon: "::keyberon::action::Action::MultipleKeyCodes(&[::keyberon::key_code::KeyCode::LCtrl, ::keyberon::key_code::KeyCode::Kb6].as_slice())";
  out keymap_drawer: "ws6";
}

key ws7 {
  out keyberon: "::keyberon::action::Action::MultipleKeyCodes(&[::keyberon::key_code::KeyCode::LCtrl, ::keyberon::key_code::KeyCode::Kb7].as_slice())";
  out keymap_drawer: "ws7";
}

layer base {
  'q'              >esc< 'w'         'e'        'r'            't'               'y'         >bspace< 'u'          >del< 'i'    >'/'< 'o'   >'\'< 'p';
  'a'@~[200]lshift       's'         'd'        'f'            'g'               'h'         >'<'<    'j'          >':'< 'k'    >'>'< 'l'         ';'@~[200]rshift;
  'z'@~[200]lctrl        'x' >metax< 'c'  >f6<  'v'            'b'               'n'         >'"'<    'm'          >'''< ','    >'_'< '.'         '/'@~[200]rctrl;
                                     lalt       tab@lgui       space@[sym]       space@[num]          enter@scroll       ralt;
}

layer sym {
  '!'              >ws1< '@' >ws2<   '{'  >ws3< '}'      >ws4< '|'         >ws5< '`'         >ml<     '~'          >mr<  '\'          n           '"';
  '#'@~[200]lshift >ws6< '$' >ws7<   '('        ')'            toad_linux        '+'                  '-'                '/'          '*'         '''@~[200]rshift;
  '%'@~[200]lctrl        '^'         '['        ']'            n                 '&'                  '='                ','          '.'         '_'@~[200]rctrl;
                                     n          lalt           space             '='                  n                  n;
}

layer num {
  '1'                    '2'         '3'        '4'            '5'               '6'         >ml<     '7'          >mr<  '8'          '9'         '0';
  f1@~[200]lshift        f2          f3         f4             f5                left                 down               up           right       volup@~[200]rshift;
  f6@~[200]lctrl         f7          f8         f9             f10               pgdown               ctrldown           ctrlup       pgup        voldown@~[200]rctrl;
                                     n          n              '='               n                    n                  end;
}
